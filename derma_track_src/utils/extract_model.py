from collections import OrderedDict
import torch


def main(inputs_model_path, output_model_path, architecture, scale, mode, invert_mode, patch_size, stride):
    

    layers_4 = ['initial.0.weight', 'initial.0.bias', 'initial.1.weight', 
                'residual_blocks.0.block.0.weight', 'residual_blocks.0.block.1.weight', 'residual_blocks.0.block.1.bias', 'residual_blocks.0.block.1.running_mean', 'residual_blocks.0.block.1.running_var', 'residual_blocks.0.block.1.num_batches_tracked', 'residual_blocks.0.block.2.weight', 'residual_blocks.0.block.3.weight', 'residual_blocks.0.block.4.weight', 'residual_blocks.0.block.4.bias', 'residual_blocks.0.block.4.running_mean', 'residual_blocks.0.block.4.running_var', 'residual_blocks.0.block.4.num_batches_tracked', 
                'residual_blocks.1.block.0.weight', 'residual_blocks.1.block.1.weight', 'residual_blocks.1.block.1.bias', 'residual_blocks.1.block.1.running_mean', 'residual_blocks.1.block.1.running_var', 'residual_blocks.1.block.1.num_batches_tracked', 'residual_blocks.1.block.2.weight', 'residual_blocks.1.block.3.weight', 'residual_blocks.1.block.4.weight', 'residual_blocks.1.block.4.bias', 'residual_blocks.1.block.4.running_mean', 'residual_blocks.1.block.4.running_var', 'residual_blocks.1.block.4.num_batches_tracked', 
                'residual_blocks.2.block.0.weight', 'residual_blocks.2.block.1.weight', 'residual_blocks.2.block.1.bias', 'residual_blocks.2.block.1.running_mean', 'residual_blocks.2.block.1.running_var', 'residual_blocks.2.block.1.num_batches_tracked', 'residual_blocks.2.block.2.weight', 'residual_blocks.2.block.3.weight', 'residual_blocks.2.block.4.weight', 'residual_blocks.2.block.4.bias', 'residual_blocks.2.block.4.running_mean', 'residual_blocks.2.block.4.running_var', 'residual_blocks.2.block.4.num_batches_tracked', 
                'residual_blocks.3.block.0.weight', 'residual_blocks.3.block.1.weight', 'residual_blocks.3.block.1.bias', 'residual_blocks.3.block.1.running_mean', 'residual_blocks.3.block.1.running_var', 'residual_blocks.3.block.1.num_batches_tracked', 'residual_blocks.3.block.2.weight', 'residual_blocks.3.block.3.weight', 'residual_blocks.3.block.4.weight', 'residual_blocks.3.block.4.bias', 'residual_blocks.3.block.4.running_mean', 'residual_blocks.3.block.4.running_var', 'residual_blocks.3.block.4.num_batches_tracked', 
                'residual_blocks.4.block.0.weight', 'residual_blocks.4.block.1.weight', 'residual_blocks.4.block.1.bias', 'residual_blocks.4.block.1.running_mean', 'residual_blocks.4.block.1.running_var', 'residual_blocks.4.block.1.num_batches_tracked', 'residual_blocks.4.block.2.weight', 'residual_blocks.4.block.3.weight', 'residual_blocks.4.block.4.weight', 'residual_blocks.4.block.4.bias', 'residual_blocks.4.block.4.running_mean', 'residual_blocks.4.block.4.running_var', 'residual_blocks.4.block.4.num_batches_tracked', 
                'residual_blocks.5.block.0.weight', 'residual_blocks.5.block.1.weight', 'residual_blocks.5.block.1.bias', 'residual_blocks.5.block.1.running_mean', 'residual_blocks.5.block.1.running_var', 'residual_blocks.5.block.1.num_batches_tracked', 'residual_blocks.5.block.2.weight', 'residual_blocks.5.block.3.weight', 'residual_blocks.5.block.4.weight', 'residual_blocks.5.block.4.bias', 'residual_blocks.5.block.4.running_mean', 'residual_blocks.5.block.4.running_var', 'residual_blocks.5.block.4.num_batches_tracked', 
                'residual_blocks.6.block.0.weight', 'residual_blocks.6.block.1.weight', 'residual_blocks.6.block.1.bias', 'residual_blocks.6.block.1.running_mean', 'residual_blocks.6.block.1.running_var', 'residual_blocks.6.block.1.num_batches_tracked', 'residual_blocks.6.block.2.weight', 'residual_blocks.6.block.3.weight', 'residual_blocks.6.block.4.weight', 'residual_blocks.6.block.4.bias', 'residual_blocks.6.block.4.running_mean', 'residual_blocks.6.block.4.running_var', 'residual_blocks.6.block.4.num_batches_tracked', 
                'residual_blocks.7.block.0.weight', 'residual_blocks.7.block.1.weight', 'residual_blocks.7.block.1.bias', 'residual_blocks.7.block.1.running_mean', 'residual_blocks.7.block.1.running_var', 'residual_blocks.7.block.1.num_batches_tracked', 'residual_blocks.7.block.2.weight', 'residual_blocks.7.block.3.weight', 'residual_blocks.7.block.4.weight', 'residual_blocks.7.block.4.bias', 'residual_blocks.7.block.4.running_mean', 'residual_blocks.7.block.4.running_var', 'residual_blocks.7.block.4.num_batches_tracked', 
                'residual_blocks.8.block.0.weight', 'residual_blocks.8.block.1.weight', 'residual_blocks.8.block.1.bias', 'residual_blocks.8.block.1.running_mean', 'residual_blocks.8.block.1.running_var', 'residual_blocks.8.block.1.num_batches_tracked', 'residual_blocks.8.block.2.weight', 'residual_blocks.8.block.3.weight', 'residual_blocks.8.block.4.weight', 'residual_blocks.8.block.4.bias', 'residual_blocks.8.block.4.running_mean', 'residual_blocks.8.block.4.running_var', 'residual_blocks.8.block.4.num_batches_tracked', 
                'residual_blocks.9.block.0.weight', 'residual_blocks.9.block.1.weight', 'residual_blocks.9.block.1.bias', 'residual_blocks.9.block.1.running_mean', 'residual_blocks.9.block.1.running_var', 'residual_blocks.9.block.1.num_batches_tracked', 'residual_blocks.9.block.2.weight', 'residual_blocks.9.block.3.weight', 'residual_blocks.9.block.4.weight', 'residual_blocks.9.block.4.bias', 'residual_blocks.9.block.4.running_mean', 'residual_blocks.9.block.4.running_var', 'residual_blocks.9.block.4.num_batches_tracked', 
                'residual_blocks.10.block.0.weight', 'residual_blocks.10.block.1.weight', 'residual_blocks.10.block.1.bias', 'residual_blocks.10.block.1.running_mean', 'residual_blocks.10.block.1.running_var', 'residual_blocks.10.block.1.num_batches_tracked', 'residual_blocks.10.block.2.weight', 'residual_blocks.10.block.3.weight', 'residual_blocks.10.block.4.weight', 'residual_blocks.10.block.4.bias', 'residual_blocks.10.block.4.running_mean', 'residual_blocks.10.block.4.running_var', 'residual_blocks.10.block.4.num_batches_tracked', 
                'residual_blocks.11.block.0.weight', 'residual_blocks.11.block.1.weight', 'residual_blocks.11.block.1.bias', 'residual_blocks.11.block.1.running_mean', 'residual_blocks.11.block.1.running_var', 'residual_blocks.11.block.1.num_batches_tracked', 'residual_blocks.11.block.2.weight', 'residual_blocks.11.block.3.weight', 'residual_blocks.11.block.4.weight', 'residual_blocks.11.block.4.bias', 'residual_blocks.11.block.4.running_mean', 'residual_blocks.11.block.4.running_var', 'residual_blocks.11.block.4.num_batches_tracked', 
                'residual_blocks.12.block.0.weight', 'residual_blocks.12.block.1.weight', 'residual_blocks.12.block.1.bias', 'residual_blocks.12.block.1.running_mean', 'residual_blocks.12.block.1.running_var', 'residual_blocks.12.block.1.num_batches_tracked', 'residual_blocks.12.block.2.weight', 'residual_blocks.12.block.3.weight', 'residual_blocks.12.block.4.weight', 'residual_blocks.12.block.4.bias', 'residual_blocks.12.block.4.running_mean', 'residual_blocks.12.block.4.running_var', 'residual_blocks.12.block.4.num_batches_tracked', 
                'residual_blocks.13.block.0.weight', 'residual_blocks.13.block.1.weight', 'residual_blocks.13.block.1.bias', 'residual_blocks.13.block.1.running_mean', 'residual_blocks.13.block.1.running_var', 'residual_blocks.13.block.1.num_batches_tracked', 'residual_blocks.13.block.2.weight', 'residual_blocks.13.block.3.weight', 'residual_blocks.13.block.4.weight', 'residual_blocks.13.block.4.bias', 'residual_blocks.13.block.4.running_mean', 'residual_blocks.13.block.4.running_var', 'residual_blocks.13.block.4.num_batches_tracked', 
                'residual_blocks.14.block.0.weight', 'residual_blocks.14.block.1.weight', 'residual_blocks.14.block.1.bias', 'residual_blocks.14.block.1.running_mean', 'residual_blocks.14.block.1.running_var', 'residual_blocks.14.block.1.num_batches_tracked', 'residual_blocks.14.block.2.weight', 'residual_blocks.14.block.3.weight', 'residual_blocks.14.block.4.weight', 'residual_blocks.14.block.4.bias', 'residual_blocks.14.block.4.running_mean', 'residual_blocks.14.block.4.running_var', 'residual_blocks.14.block.4.num_batches_tracked', 
                'residual_blocks.15.block.0.weight', 'residual_blocks.15.block.1.weight', 'residual_blocks.15.block.1.bias', 'residual_blocks.15.block.1.running_mean', 'residual_blocks.15.block.1.running_var', 'residual_blocks.15.block.1.num_batches_tracked', 'residual_blocks.15.block.2.weight', 'residual_blocks.15.block.3.weight', 'residual_blocks.15.block.4.weight', 'residual_blocks.15.block.4.bias', 'residual_blocks.15.block.4.running_mean', 'residual_blocks.15.block.4.running_var', 'residual_blocks.15.block.4.num_batches_tracked', 
                'post_residual.0.weight', 'post_residual.1.weight', 'post_residual.1.bias', 'post_residual.1.running_mean', 'post_residual.1.running_var', 'post_residual.1.num_batches_tracked', 
                'upsampling.0.block.0.weight', 'upsampling.0.block.0.bias', 'upsampling.0.block.2.weight', 
                'upsampling.1.block.0.weight', 'upsampling.1.block.0.bias', 'upsampling.1.block.2.weight', 
                'final.weight', 'final.bias']


    
    layers_2 = ['initial.0.weight', 'initial.0.bias', 'initial.1.weight', 
                'residual_blocks.0.block.0.weight', 'residual_blocks.0.block.1.weight', 'residual_blocks.0.block.1.bias', 'residual_blocks.0.block.1.running_mean', 'residual_blocks.0.block.1.running_var', 'residual_blocks.0.block.1.num_batches_tracked', 'residual_blocks.0.block.2.weight', 'residual_blocks.0.block.3.weight', 'residual_blocks.0.block.4.weight', 'residual_blocks.0.block.4.bias', 'residual_blocks.0.block.4.running_mean', 'residual_blocks.0.block.4.running_var', 'residual_blocks.0.block.4.num_batches_tracked', 
                'residual_blocks.1.block.0.weight', 'residual_blocks.1.block.1.weight', 'residual_blocks.1.block.1.bias', 'residual_blocks.1.block.1.running_mean', 'residual_blocks.1.block.1.running_var', 'residual_blocks.1.block.1.num_batches_tracked', 'residual_blocks.1.block.2.weight', 'residual_blocks.1.block.3.weight', 'residual_blocks.1.block.4.weight', 'residual_blocks.1.block.4.bias', 'residual_blocks.1.block.4.running_mean', 'residual_blocks.1.block.4.running_var', 'residual_blocks.1.block.4.num_batches_tracked', 
                'residual_blocks.2.block.0.weight', 'residual_blocks.2.block.1.weight', 'residual_blocks.2.block.1.bias', 'residual_blocks.2.block.1.running_mean', 'residual_blocks.2.block.1.running_var', 'residual_blocks.2.block.1.num_batches_tracked', 'residual_blocks.2.block.2.weight', 'residual_blocks.2.block.3.weight', 'residual_blocks.2.block.4.weight', 'residual_blocks.2.block.4.bias', 'residual_blocks.2.block.4.running_mean', 'residual_blocks.2.block.4.running_var', 'residual_blocks.2.block.4.num_batches_tracked', 
                'residual_blocks.3.block.0.weight', 'residual_blocks.3.block.1.weight', 'residual_blocks.3.block.1.bias', 'residual_blocks.3.block.1.running_mean', 'residual_blocks.3.block.1.running_var', 'residual_blocks.3.block.1.num_batches_tracked', 'residual_blocks.3.block.2.weight', 'residual_blocks.3.block.3.weight', 'residual_blocks.3.block.4.weight', 'residual_blocks.3.block.4.bias', 'residual_blocks.3.block.4.running_mean', 'residual_blocks.3.block.4.running_var', 'residual_blocks.3.block.4.num_batches_tracked', 
                'residual_blocks.4.block.0.weight', 'residual_blocks.4.block.1.weight', 'residual_blocks.4.block.1.bias', 'residual_blocks.4.block.1.running_mean', 'residual_blocks.4.block.1.running_var', 'residual_blocks.4.block.1.num_batches_tracked', 'residual_blocks.4.block.2.weight', 'residual_blocks.4.block.3.weight', 'residual_blocks.4.block.4.weight', 'residual_blocks.4.block.4.bias', 'residual_blocks.4.block.4.running_mean', 'residual_blocks.4.block.4.running_var', 'residual_blocks.4.block.4.num_batches_tracked', 
                'residual_blocks.5.block.0.weight', 'residual_blocks.5.block.1.weight', 'residual_blocks.5.block.1.bias', 'residual_blocks.5.block.1.running_mean', 'residual_blocks.5.block.1.running_var', 'residual_blocks.5.block.1.num_batches_tracked', 'residual_blocks.5.block.2.weight', 'residual_blocks.5.block.3.weight', 'residual_blocks.5.block.4.weight', 'residual_blocks.5.block.4.bias', 'residual_blocks.5.block.4.running_mean', 'residual_blocks.5.block.4.running_var', 'residual_blocks.5.block.4.num_batches_tracked', 
                'residual_blocks.6.block.0.weight', 'residual_blocks.6.block.1.weight', 'residual_blocks.6.block.1.bias', 'residual_blocks.6.block.1.running_mean', 'residual_blocks.6.block.1.running_var', 'residual_blocks.6.block.1.num_batches_tracked', 'residual_blocks.6.block.2.weight', 'residual_blocks.6.block.3.weight', 'residual_blocks.6.block.4.weight', 'residual_blocks.6.block.4.bias', 'residual_blocks.6.block.4.running_mean', 'residual_blocks.6.block.4.running_var', 'residual_blocks.6.block.4.num_batches_tracked', 
                'residual_blocks.7.block.0.weight', 'residual_blocks.7.block.1.weight', 'residual_blocks.7.block.1.bias', 'residual_blocks.7.block.1.running_mean', 'residual_blocks.7.block.1.running_var', 'residual_blocks.7.block.1.num_batches_tracked', 'residual_blocks.7.block.2.weight', 'residual_blocks.7.block.3.weight', 'residual_blocks.7.block.4.weight', 'residual_blocks.7.block.4.bias', 'residual_blocks.7.block.4.running_mean', 'residual_blocks.7.block.4.running_var', 'residual_blocks.7.block.4.num_batches_tracked', 
                'residual_blocks.8.block.0.weight', 'residual_blocks.8.block.1.weight', 'residual_blocks.8.block.1.bias', 'residual_blocks.8.block.1.running_mean', 'residual_blocks.8.block.1.running_var', 'residual_blocks.8.block.1.num_batches_tracked', 'residual_blocks.8.block.2.weight', 'residual_blocks.8.block.3.weight', 'residual_blocks.8.block.4.weight', 'residual_blocks.8.block.4.bias', 'residual_blocks.8.block.4.running_mean', 'residual_blocks.8.block.4.running_var', 'residual_blocks.8.block.4.num_batches_tracked', 
                'residual_blocks.9.block.0.weight', 'residual_blocks.9.block.1.weight', 'residual_blocks.9.block.1.bias', 'residual_blocks.9.block.1.running_mean', 'residual_blocks.9.block.1.running_var', 'residual_blocks.9.block.1.num_batches_tracked', 'residual_blocks.9.block.2.weight', 'residual_blocks.9.block.3.weight', 'residual_blocks.9.block.4.weight', 'residual_blocks.9.block.4.bias', 'residual_blocks.9.block.4.running_mean', 'residual_blocks.9.block.4.running_var', 'residual_blocks.9.block.4.num_batches_tracked', 
                'residual_blocks.10.block.0.weight', 'residual_blocks.10.block.1.weight', 'residual_blocks.10.block.1.bias', 'residual_blocks.10.block.1.running_mean', 'residual_blocks.10.block.1.running_var', 'residual_blocks.10.block.1.num_batches_tracked', 'residual_blocks.10.block.2.weight', 'residual_blocks.10.block.3.weight', 'residual_blocks.10.block.4.weight', 'residual_blocks.10.block.4.bias', 'residual_blocks.10.block.4.running_mean', 'residual_blocks.10.block.4.running_var', 'residual_blocks.10.block.4.num_batches_tracked', 
                'residual_blocks.11.block.0.weight', 'residual_blocks.11.block.1.weight', 'residual_blocks.11.block.1.bias', 'residual_blocks.11.block.1.running_mean', 'residual_blocks.11.block.1.running_var', 'residual_blocks.11.block.1.num_batches_tracked', 'residual_blocks.11.block.2.weight', 'residual_blocks.11.block.3.weight', 'residual_blocks.11.block.4.weight', 'residual_blocks.11.block.4.bias', 'residual_blocks.11.block.4.running_mean', 'residual_blocks.11.block.4.running_var', 'residual_blocks.11.block.4.num_batches_tracked', 
                'residual_blocks.12.block.0.weight', 'residual_blocks.12.block.1.weight', 'residual_blocks.12.block.1.bias', 'residual_blocks.12.block.1.running_mean', 'residual_blocks.12.block.1.running_var', 'residual_blocks.12.block.1.num_batches_tracked', 'residual_blocks.12.block.2.weight', 'residual_blocks.12.block.3.weight', 'residual_blocks.12.block.4.weight', 'residual_blocks.12.block.4.bias', 'residual_blocks.12.block.4.running_mean', 'residual_blocks.12.block.4.running_var', 'residual_blocks.12.block.4.num_batches_tracked', 
                'residual_blocks.13.block.0.weight', 'residual_blocks.13.block.1.weight', 'residual_blocks.13.block.1.bias', 'residual_blocks.13.block.1.running_mean', 'residual_blocks.13.block.1.running_var', 'residual_blocks.13.block.1.num_batches_tracked', 'residual_blocks.13.block.2.weight', 'residual_blocks.13.block.3.weight', 'residual_blocks.13.block.4.weight', 'residual_blocks.13.block.4.bias', 'residual_blocks.13.block.4.running_mean', 'residual_blocks.13.block.4.running_var', 'residual_blocks.13.block.4.num_batches_tracked', 
                'residual_blocks.14.block.0.weight', 'residual_blocks.14.block.1.weight', 'residual_blocks.14.block.1.bias', 'residual_blocks.14.block.1.running_mean', 'residual_blocks.14.block.1.running_var', 'residual_blocks.14.block.1.num_batches_tracked', 'residual_blocks.14.block.2.weight', 'residual_blocks.14.block.3.weight', 'residual_blocks.14.block.4.weight', 'residual_blocks.14.block.4.bias', 'residual_blocks.14.block.4.running_mean', 'residual_blocks.14.block.4.running_var', 'residual_blocks.14.block.4.num_batches_tracked', 
                'residual_blocks.15.block.0.weight', 'residual_blocks.15.block.1.weight', 'residual_blocks.15.block.1.bias', 'residual_blocks.15.block.1.running_mean', 'residual_blocks.15.block.1.running_var', 'residual_blocks.15.block.1.num_batches_tracked', 'residual_blocks.15.block.2.weight', 'residual_blocks.15.block.3.weight', 'residual_blocks.15.block.4.weight', 'residual_blocks.15.block.4.bias', 'residual_blocks.15.block.4.running_mean', 'residual_blocks.15.block.4.running_var', 'residual_blocks.15.block.4.num_batches_tracked', 
                'post_residual.0.weight', 'post_residual.1.weight', 'post_residual.1.bias', 'post_residual.1.running_mean', 'post_residual.1.running_var', 'post_residual.1.num_batches_tracked', 
                'upsampling.0.block.0.weight', 'upsampling.0.block.0.bias', 'upsampling.0.block.2.weight', 
                'final.weight', 'final.bias']

    # Process parameter dictionary
    state_dict = torch.load(inputs_model_path, map_location=torch.device("cpu"))["state_dict"]
    new_state_dict = OrderedDict()

    # Delete _orig_mod. in the parameter name
    for k, v in state_dict.items():
        new_state_dict[layers_2.pop(0) if scale == 2 else layers_4.pop(0)] = v

    torch.save({"architecture": architecture, "scale": scale, "color_mode": mode, "invert_color_mode": invert_mode, "need_resize": False, 
                "patch_size": patch_size, "stride": stride, "model_state_dict": new_state_dict}, output_model_path)

if __name__ == "__main__":
    main("C:\\Users\\Utilisateur\\Downloads\\SRGAN_x2-SRGAN_ImageNet.pth.tar", "C:\\Users\\Utilisateur\\Downloads\\Pretrained_SRGAN_x2.pth",
         architecture = "SRGAN", scale = 2, mode = "BGR2RGB", invert_mode = "RGB2BGR", patch_size = None, stride = None)
    
    main("C:\\Users\\Utilisateur\\Downloads\\SRGAN_x4-SRGAN_ImageNet.pth.tar", "C:\\Users\\Utilisateur\\Downloads\\Pretrained_SRGAN_x4.pth",
         architecture = "SRGAN", scale = 4, mode = "BGR2RGB", invert_mode = "RGB2BGR", patch_size = None, stride = None)
        
    main("C:\\Users\\Utilisateur\\Downloads\\SRResNet_x2-SRGAN_ImageNet.pth.tar", "C:\\Users\\Utilisateur\\Downloads\\Pretrained_SRResNet_x2_BGR2RGB.pth",
         architecture = "SRResNet", scale = 2, mode = "BGR2RGB", invert_mode = "RGB2BGR", patch_size = 96, stride = 48)
        
    main("C:\\Users\\Utilisateur\\Downloads\\SRResNet_x4-SRGAN_ImageNet.pth.tar", "C:\\Users\\Utilisateur\\Downloads\\Pretrained_SRResNet_x4_BGR2RGB.pth",
         architecture = "SRResNet", scale = 4, mode = "BGR2RGB", invert_mode = "RGB2BGR", patch_size = 96, stride = 48)